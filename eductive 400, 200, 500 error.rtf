{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;\f2\fswiss\fcharset0 Helvetica-Bold;
}
{\colortbl;\red255\green255\blue255;\red212\green214\blue154;\red23\green23\blue23;\red202\green202\blue202;
\red194\green126\blue101;\red192\green80\blue77;}
{\*\expandedcolortbl;;\cssrgb\c86275\c86275\c66667;\cssrgb\c11765\c11765\c11765;\cssrgb\c83137\c83137\c83137;
\cssrgb\c80784\c56863\c47059;\csgenericrgb\c75294\c31373\c30196;}
\paperw11900\paperh16840\vieww12000\viewh15160\viewkind0
\deftab720
\pard\pardeftab720\sl276\slmult1\sa200\partightenfactor0

\f0\fs22 \cf0 How to use the Node.js http.ServerResponse.statusCode property\
\
\pard\pardeftab720\partightenfactor0

\f1\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 sendBadRequest.  : 400,\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 Success :    200,\
UnauthorizedError\cf4 \cb1 \strokec4 :  401,\
\
\pard\pardeftab720\sl276\slmult1\sa200\partightenfactor0

\f0\fs22 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
\
\
Idris Olubisi\
HTTP response status codes are used in web development to determine whether a particular HTTP request has been completed successfully.\
\
This article will talk about httpServerResponse.statusCode and how to use it in modern Node.js.\
\
What is httpServerResponse.statusCode?\
This property controls the status code that will be delivered to the client when the headers are flushed.\
\
The httpServerResponse.statusCode is an internal application programming interface of class ServerResponse within the HTTP module.\
\

\f2\b Types of status codes
\f0\b0 \
Status codes are a set of universal web development codes utilized to create apps all over the world.\

\f2\b \
Informational responses (100\'96199)\
Successful responses (200\'96299)\
Redirects (300\'96399)\
Client errors (400\'96499)\
Server errors (500\'96599)\

\f0\b0 How to use httpServerResponse.statusCode\
In our discussion, we\'92ll see some instances of how to use some of these status codes.\
\

\f2\b \cf6 1. 200 OK
\f0\b0 \cf0 \
The HTTP 200 OK response code implies a successful request.\
\
Here is an example of this kind of HTTP response.\
\
GET: The response contains an entity that corresponds to the resource requested.\
POST: An entity that describes or contains the action\'92s result.\
HEAD: In the response, the entity-header fields related to the requested resource are sent without any message-body.\
Example:\
\
app.get('/', function (req, res) \{\
    res.status(200).send('Status: OK')\
\});\
\

\f2\b \cf6 2. 201 Created
\f0\b0 \cf0 \
This indicates that the request was completed, and a new resource was created as a result. The URI(s) sent in the response entity can refer to the newly generated help, with a Location header field providing the most particular URI for the resource.\
\
app.get('/', function (req, res) \{\
    res.status(201).send('Status: Created')\
\});\
\

\f2\b \cf6 3. 204 No Content
\f0\b0 \cf0 \
This response is sent when the server has completed the request and does not need to return an entity-body, but wants updated metainformation. The answer may contain additional or updated metadata in entity-headers, which should be associated with the requested variant if present.\
\
app.get('/', function (req, res) \{\
    res.status(204).send('Status: No Content')\
\});\
\

\f2\b \cf6 4. 400 Bad Request
\f0\b0 \cf0 \
When the server is unable to understand the request due to incorrect syntax, this response is returned.\
\
app.get('/', function (req, res) \{\
    res.status(400).send('Status: Bad Request')\
\});\
\

\f2\b \cf6 400 Bad Request\
\
\cf0 This error indicates that the user's request contains incorrect syntax.\

\f0\b0 \

\f2\b \cf6 5. 401 Unauthorized
\f0\b0 \cf0 \
Even though the HTTP standard specifies \'93unauthorized,\'94 this response indicates \'93unauthenticated\'94 logically. To get the requested response, the client must first authenticate itself.\
\
This response code can also be used to ensure the user has the proper access to the resource.\
\
app.get('/', function (req, res) \{\
    res.status(401).send('Status: Unauthorized')\
\});
\f2\b \cf6 \
\
401 Unauthorized\
\

\f0\b0 \cf0 This error indicates that the requested file requires authentication (a username and password).\

\f2\b \cf6 \
6. 403 Forbidden\

\f0\b0 \cf0 This response is gotten when the server refuses to provide the requested resource because the client does not have access permissions to the material; it is unauthorized. Unlike 401, the server is aware of the client\'92s identity.\
\
app.get('/', function (req, res) \{\
    res.status(403).send('Status: Forbidden')\
\});\

\f2\b \cf6 \
403 Forbidden\
\

\f0\b0 \cf0 This error indicates that the server will not allow the visitor to access the requested file. If a visitor receives this code unexpectedly, you should check the file's permission settings, or check whether the file has been protected.\

\f2\b \cf6 \
\
\
\
\
\
7. 404 Not Found\

\f0\b0 \cf0 This means the requested resource is unavailable on the server, or maybe the URL has been mistyped in the browser. This can also indicate that the endpoint is correct, but the resource does not exist in an API. This response may be used instead of 403 to conceal the existence of a resource from an unauthorized client.\
\
app.get('/', function (req, res) \{\
    res.status(404).send('Status: Not Found')\
\});\

\f2\b \cf6 \
404 Not Found\
\

\f0\b0 \cf0 This error indicates that the server could not find the file that the visitor requested. This commonly occurs when a URL is mistyped.\
\

\f2\b \cf6 8. 500 Internal Server Error\

\f0\b0 \cf0 The server ran into an unanticipated problem that stopped it from completing the request.\
\
app.get('/', function (req, res) \{\
    res.status(500).send('Status: Internal Server Error')\
\});\
\

\f2\b \cf6 \
5xx Errors\

\f0\b0 \cf0 \
These errors are caused by the server being unable to fulfill an apparently valid request from a visitor. Often, you will need the help of a server administrator to investigate them.\
\
It is also important to consider that quite often, a chain of servers is handling an HTTP request, so that it may not be your server that is returning the error.\

\f2\b \cf6 \
500 Internal Server Error\
\

\f0\b0 \cf0 This error indicates that the server has encountered an unexpected condition. This often occurs when an application request cannot be fulfilled due to the application being configured incorrectly on the server.\
\

\f2\b \cf6 501 Not Implemented\
\
\cf0 This error indicates that the HTTP method sent by the client is not supported by the server. This is most often caused by the server being out of date. It is a very rare error and generally requires that the web server be updated.\
\
\cf6 9. 503 Service Not Available
\f0\b0 \cf0 \
This happens due to a sudden overload or server maintenance and it means the server cannot handle the request.\
\
app.get('/', function (req, res) \{\
    res.status(503).send('Status: Service Not Available')\
\});\

\f2\b \cf6 503 Service Unavailable\
\

\f0\b0 \cf0 This error occurs when the server is unable to handle requests due to a temporary overload or due to the server being temporarily closed for maintenance. The error indicates that the server will only temporarily be down. It is possible to receive other errors in place of 503.\
\
Contact the server administrator if this problem persists.\

\f2\b \cf6 \
502 Bad Gateway\
\
\cf0 This error is usually due to improperly configured proxy servers. However, the problem may also arise when there is poor IP communication between back\'97end computers, when the client's server is overloaded, or when a firewall is functioning improperly.\
\
The first step in resolving the issue is to clear the client's cache. This action should result in a different proxy being used to resolve the web server's content.\
\
\cf6 10. 504 Gateway Timeout\

\f0\b0 \cf0 When the server is operating as a gateway and cannot promptly respond, this error response is returned.\
\
app.get('/', function (req, res) \{\
    res.status(504).send('Status: GateWay Timeout')\
\});\
\
There are many different status codes for HTTP responses, and we\'92ve gone through a few of them here. For more, see the resources section of this page.\
\

\f2\b \cf6 504 Gateway Timeout\
\

\f0\b0 \cf0 This error occurs when a server somewhere along the chain does not receive a timely response from a server further up the chain. The problem is caused entirely by slow communication between upstream computers.\
\
To resolve this issue, contact the system administrator.\
\
}